# Default values for product-recommender-system.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: quay.io/ecosystem-appeng/product-recommender-system
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.1.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: 8080


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

pipelineJobImage: quay.io/yuvalturg/ml-pipeline-importer:0.0.2
frontendImage: quay.io/yuvalturg/rec-sys-ui:0.0.3
applicationImage: quay.io/yuvalturg/rec-sys-app:0.0.24

dbName: product_recommender_system

env:
  - name: DB_HOST
    valueFrom:
      secretKeyRef:
        name: pgvector
        key: host
  - name: DB_PORT
    valueFrom:
      secretKeyRef:
        name: pgvector
        key: port
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: pgvector
        key: user
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: pgvector
        key: password
  - name: DB_NAME
    valueFrom:
      secretKeyRef:
        name: pgvector
        key: dbname
  - name: KAFKA_SERVICE_ADDR
    value: rec-sys-cluster-kafka-bootstrap:9092

feast:
  project: feast_rec_sys
  secret: feast-feast-rec-sys-registry-tls
  registry: feast-feast-rec-sys-registry

kafka:
  cluster:
    name: rec-sys-cluster
  replicas: 3
  storage:
    type: ephemeral
  dbSecretName: pgvector
  nodepools:
    - name: broker
      roles: ["broker"]
    - name: controller
      roles: ["controller"]
  topics:
    - name: positive-interactions
    - name: negetive-interactions
  connectors:
    - name: source-connector-positive-interactions
      topics: positive-interactions
      tableNameFormat: stream_positive_interaction
    - name: source-connector-negetive-interactions
      topics: negetive-interactions
      tableNameFormat: stream_negative_interaction
